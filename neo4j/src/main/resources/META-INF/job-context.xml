<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:util="http://www.springframework.org/schema/util" 
       xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:p="http://www.springframework.org/schema/p" xmlns:jee="http://www.springframework.org/schema/jee"
    xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
        		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
    <context:component-scan base-package="jason.app.weixin.neo4j.job" />
    <context:annotation-config />
  	<tx:jta-transaction-manager />
  	<tx:annotation-driven />
<jee:jndi-lookup id="quartzDataSource" jndi-name="java:/quartzDS"/>

     <bean id="transactionManager"
        class="org.springframework.transaction.jta.JtaTransactionManager">
        <property name="transactionManagerName" value="java:jboss/TransactionManager" />
        <property name="userTransactionName" value="java:jboss/UserTransaction" />
 		<property name="allowCustomIsolationLevels" value="true" />
    </bean>
	<bean id="jobFactory" class="jason.app.weixin.neo4j.job.quartz.SpringJobFactory" />
   <!-- Quartz集群Schduler -->  
    <bean id="clusterQuartzScheduler" class="jason.app.weixin.neo4j.job.quartz.SpringSchedulerFactoryBean">  
        <!-- Triggers集成 -->  
        <!-- 
        <property name="triggers">  
            <list>  
          		<ref bean="weixinAccessTokenTrigger" /> 
                <ref bean="analyzeDistanceTrigger" />   
            </list>  
        </property>  
         -->
        <property name="jobFactory" ref="jobFactory" />
        <!--  quartz配置文件路径-->  
        <property name="configLocation" value="classpath:schedule/quartz-cluster.properties" />  
        <!-- 启动时延期3秒开始任务 -->  
        <property name="startupDelay" value="3" />  
        <!-- 保存Job数据到数据库所需的数据源 -->  
        <property name="dataSource" ref="quartzDataSource" />  
        <property name="transactionManager" ref="transactionManager" />
        <!-- Job接受applicationContext的成员变量名 -->  
        <property name="applicationContextSchedulerContextKey" value="applicationContext" />  
    </bean>  
  
    <!--   
    <bean id="timerTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">  
        <property name="jobDetail" ref="timerJobDetail" />  
        <property name="cronExpression" value="0 0/2 * * * ?" />  
    </bean> -->  
  
    <!-- Timer JobDetail, 基于JobDetailBean实例化Job Class,可持久化到数据库实现集群 -->  
<!--     <bean id="analyzeDistanceJobDetail" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">  
        <property name="jobClass" value="jason.app.weixin.neo4j.job.AnalyzeDistanceJob" />  
        <property name="durability" value="true" />  
    </bean>  
 -->    
        <!-- Timer式 Trigger定义-->  
<!--     <bean id="analyzeDistanceTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">  
        <property name="jobDetail" ref="analyzeDistanceJobDetail" />  
        <property name="repeatInterval" value="10000" />  
    </bean>  
 -->  
 <!-- 
 <bean id="weixinAccessTokenDetail" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">  
        <property name="jobClass" value="jason.app.weixin.neo4j.job.WeixinAccessTokenJob" />  
        <property name="durability" value="true" />  
    </bean>  
 <bean id="weixinAccessTokenTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">  
        <property name="jobDetail" ref="weixinAccessTokenDetail" />  
        <property name="repeatInterval" value="10000" />  
    </bean>  
 -->  
  
    <!-- Timer Job的可配置属性,在job中通过applicationContext动态获取 -->  
    <util:map id="timerJobConfig">  
        <entry key="nodeName" value="default" />  
    </util:map>  
    
    
</beans>
